DROP TABLE Part PURGE;
DROP TABLE Car PURGE;
DROP TABLE Pallet PURGE;
DROP TABLE Product PURGE;

drop sequence part_seq;
drop sequence pallet_seq;
drop sequence product_seq;

drop trigger part_on_insert;
drop trigger pallet_on_insert;
drop trigger product_on_insert;

-- 1. Create sequences

CREATE SEQUENCE part_seq
 START WITH     10000000
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
CREATE SEQUENCE pallet_seq
 START WITH     1000
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE product_seq
 START WITH     10000000
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
-- 2. Create tables
    
CREATE TABLE Car
    (
        id 				NUMBER(8, 0) 
			GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
        chassisNumber 	VARCHAR(8) NOT NULL
            CONSTRAINT coCarChasNumber UNIQUE,
        manufacturer 	VARCHAR(50) NOT NULL,
        model 			VARCHAR(50) NOT NULL,
        year 			NUMBER(4, 0) NOT NULL,
        weight 			DOUBLE PRECISION NOT NULL,   
		state 			VARCHAR(30) NOT NULL
                        CONSTRAINT carStateCheck CHECK 
                          (state IN ('Available', 'In progress', 'Finished'))
    );    
    
-- 
    
CREATE TABLE Product
    (
        id 				NUMBER(8, 0) 
			GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
        type 			VARCHAR(50) NOT NULL,
        name 			VARCHAR(100) NOT NULL
    );    
    
--
    
CREATE TABLE Pallet
    (
        id 				NUMBER(4, 0) 
			GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
        partType 		VARCHAR(100) NOT NULL,
        weight 		    DOUBLE PRECISION NOT NULL,
        maxWeight 		DOUBLE PRECISION NOT NULL,
		state 			VARCHAR(30) NOT NULL
                        CONSTRAINT palletStateCheck CHECK 
                          (state IN ('Available', 'Finished'))
    );    
    
--
    
CREATE TABLE Part
    (
        id 				NUMBER(8, 0) 
			GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
        type 			VARCHAR(50) NOT NULL,
        weight 			DOUBLE PRECISION NOT NULL,
        carId 			NUMBER(8, 0) NOT NULL
			REFERENCES Car (id),
        palletId 		NUMBER(4, 0) NOT NULL
            REFERENCES Pallet (id),
        productId 		NUMBER(8, 0) NOT NULL
            REFERENCES Product (id)
    );    

-- ##################################
-- 3. INSERTS AFTER TABLES WERE CREATED
-- ##################################

INSERT INTO Pallet (id, partType, weight, maxWeight, state)
    VALUES (-1, 'no type', 0, 0, 'Finished');
    
INSERT INTO Product (id, type, name)
    VALUES (-1, 'no product', 'no product');
COMMIT;


-- 4. Create triggers

CREATE OR REPLACE TRIGGER part_on_insert
  BEFORE INSERT ON Part
  FOR EACH ROW
BEGIN
  SELECT part_seq.nextval
  INTO :new.id
  FROM dual;
END;
/
CREATE OR REPLACE TRIGGER pallet_on_insert
  BEFORE INSERT ON Pallet
  FOR EACH ROW
BEGIN
  SELECT pallet_seq.nextval
  INTO :new.id
  FROM dual;
END;
/
CREATE OR REPLACE TRIGGER product_on_insert
  BEFORE INSERT ON Product
  FOR EACH ROW
BEGIN
  SELECT product_seq.nextval
  INTO :new.id
  FROM dual;
END;